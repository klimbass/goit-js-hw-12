import{a as L,i as n,S as b}from"./assets/vendor-5401a4b0.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))m(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const p of i.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&m(p)}).observe(document,{childList:!0,subtree:!0});function e(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function m(t){if(t.ep)return;t.ep=!0;const i=e(t);fetch(t.href,i)}})();let f=async r=>await L.get(`https://pixabay.com/api/?${r}`).then(s=>s.data);function y(r){return r.reduce((s,e)=>s+=`<div class="image-box">
                        <a href="${e.largeImageURL}">
                       <img class="image" src=${e.webformatURL} alt="${e.tags}"  height="200" width="360"/>
                          <div class="image-discr">
                            <p class="text"><span class="image-title">Likes</span>${e.likes}</p>
                            <p class="text"><span class="image-title">Views</span>${e.views}</p>
                            <p class="text"><span class="image-title">Comments</span>${e.comments}</p>
                            <p class="text"><span class="image-title">Downloads</span>${e.downloads}</p> 
                          </div>
                        </a>
                    </div>`,"")}const l="/goit-js-hw-12/assets/icon-close-6c427745.svg",a=new URLSearchParams({key:"4348225-c90d49c3185e1d6dd0df9aa80",q:"",image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:1}),d=document.querySelector(".loader"),g=document.querySelector(".loader-more"),o=document.querySelector(".gallery"),h=document.querySelector(".form"),c=document.querySelector(".btn-load-more");let u;function v(){u=new b(".gallery a",{captionsData:"alt",captionDelay:250})}h.addEventListener("submit",r=>{r.preventDefault();const s=r.target.elements.input.value.trim();s?(o.innerHTML="",d.classList.remove("invisible"),a.set("q",s),a.set("page",1),f(a).then(async e=>{e.hits.length===0?(d.classList.add("invisible"),c.classList.add("invisible"),o.innerHTML="",n.error({position:"topRight",maxWidth:"380px",progressBar:!1,iconUrl:l,transitionIn:"fadeInLeft",message:"Sorry, there are no images matching your search query. Please try again!"})):(d.classList.add("invisible"),o.innerHTML=await y(e.hits),a.set("page",Number(a.get("page"))+1),v(),u.refresh(),e.hits.length<e.total&&c.classList.remove("invisible"))}).catch(e=>{n.error({position:"topRight",maxWidth:"380px",progressBar:!1,iconUrl:l,transitionIn:"fadeInLeft",message:`Error:${e} `})})):(d.classList.add("invisible"),o.innerHTML="",n.show({progressBar:!1,position:"topRight",maxWidth:"380px",iconUrl:l,transitionIn:"fadeInLeft",message:"Put the request!"})),h.reset()});c.addEventListener("click",x);function x(){c.classList.add("invisible"),g.classList.remove("invisible"),f(a).then(r=>{if(r.hits.length===0)g.classList.add("invisible"),o.innerHTML="",n.error({position:"topRight",maxWidth:"380px",progressBar:!1,iconUrl:l,transitionIn:"fadeInLeft",message:"Sorry, there are no images matching your search query. Please try again!"});else{g.classList.add("invisible"),o.insertAdjacentHTML("beforeend",y(r.hits)),a.set("page",Number(a.get("page"))+1),u.refresh();const s=document.querySelector(".image-box").getBoundingClientRect().height;window.scrollBy({top:s*2+40,behavior:"smooth"}),(Number(a.get("page"))-1)*Number(a.get("per_page"))<r.total?c.classList.remove("invisible"):n.show({position:"topRight",maxWidth:"380px",progressBar:!1,iconUrl:l,transitionIn:"fadeInLeft",message:"We're sorry, but you've reached the end of search results."})}})}
//# sourceMappingURL=commonHelpers.js.map
